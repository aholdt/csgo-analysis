# Node.js Function App to Linux on Azure
# Build a Node.js function app and deploy it to Azure as a Linux function app.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
    include:
      - master
  paths:
    include:
      - functions
      - libs

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: "ef333bfd-fcdd-40a8-ab56-7ea4c578e04f"

  # Function app name
  functionAppName: "demoan-func"

  # Environment name
  environmentName: "production"

  # Agent VM image name
  vmImageName: "ubuntu-latest"

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)

        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "14.x"
            displayName: "Install Node.js"

          - script: |
              npm ci
              npm run build-prod
            displayName: "Prepare binaries"
            continueOnError: false
            
          - task: CopyFiles@2
            inputs:
              Contents: "package*.json"
              SourceFolder: ""
              TargetFolder: "dist/apps/demoanappfunc"

          - task: npm@1
            inputs:
              command: "custom"
              workingDir: "dist/apps/demoanappfunc"
              customCommand: "ci --production"

          - task: ArchiveFiles@2
            displayName: "Archive files"
            inputs:
              rootFolderOrFile: "$(System.DefaultWorkingDirectory)/dist/apps/demoanappfunc"
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
              replaceExistingArchive: true

          - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            artifact: drop

  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: Deploy
        displayName: Deploy
        environment: $(environmentName)
        pool:
          vmImage: $(vmImageName)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureFunctionApp@1
                  displayName: "Azure Functions App Deploy: "
                  inputs:
                    azureSubscription: "$(azureSubscription)"
                    appType: functionAppLinux
                    appName: $(functionAppName)
                    package: "$(Pipeline.Workspace)/drop/$(Build.BuildId).zip"
